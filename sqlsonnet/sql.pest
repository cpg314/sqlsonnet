WHITESPACE = _{ " " | "\n" | "\t" }
COMMENT    = _{ "--" ~ (!"\n" ~ ANY)* ~ ("\n" | EOI) }

// Expressions
number = @{ ASCII_DIGIT+ }
string =  { "'" ~ (!"'" ~ ANY)* ~ "'" }
// literal  = @{ ASCII_ALPHANUMERIC+ |  "*" }
infix_op =  { "+" | "-" | "*" | "/" | "=" | ">=" | "<=" | ">" | "<" | AND | OR | IN | LIKE }
op_term  =  { !KEYWORD ~ infix_op ~ term }
expr     =  { term ~ op_term* ~ as? }
function = ${ identifier ~ "(" ~ exprs ~ ")" }
term     =  {
    (PAR_OPEN ~ expr ~ PAR_CLOSE)
  | (PAR_OPEN ~ #select = select ~ PAR_CLOSE)
  | (identifier ~ "[" ~ number ~ "]")
  | (simple_identifier ~ "." ~ number)
  | "-" ~ term
  | ^"NOT" ~ term
  | function
  | identifier
  | string
  | number
  | "*"
}

exprs = !{ expr ~ ("," ~ expr)* }
as    = ${ AS ~ WHITESPACE+ ~ #id = identifier }

PAR_OPEN  = _{ "(" }
PAR_CLOSE = _{ ")" }

// Keywords
// TODO: silent
AND      = { ^"and" }
OR       = { ^"or" }
ASC      = { ^"asc" }
DESC     = { ^"desc" }
AS       = { ^"as" }
IN       = { ^"in" }
LIKE       = { ^"like" }
FROM     = { ^"from" }
GROUP_BY = { ^"group by" }
ORDER_BY = { ^"order by" }
LIMIT    = { ^"limit" }
SAMPLE   = { ^"sample" }
WHERE    = { ^"where" }
HAVING   = { ^"having" }
USING    = { ^"using" }
ON       = { ^"on" }
SELECT   = { ^"select" }
SETTINGS   = { ^"settings" }
JOIN     = { ^"inner "? ~ ^"join" }
KEYWORD  = { ASC | DESC | AS | SELECT | FROM | GROUP_BY | ORDER_BY | WHERE | LIMIT | SAMPLE | JOIN | USING | HAVING | ON | SETTINGS }

simple_identifier = @{ (ASCII_ALPHA+ ~ (ASCII_ALPHANUMERIC | "_")*) | "*" }
identifier        = @{ !KEYWORD ~ (simple_identifier ~ ".")? ~ simple_identifier }
identifiers       =  { identifier ~ ("," ~ identifier)* }

// Table name
// parameterized_view = @{ identifier ~ "{" ~ "}"  }
table_or_subquery = { (#id = identifier | (PAR_OPEN ~ #subquery = select ~ PAR_CLOSE)) ~ #as = as? }

// Logical
where  = { WHERE ~ expr }
having = { HAVING ~ expr }

// JOIN
join      = { JOIN ~ #from = table_or_subquery ~ #as = as? ~ #cond = join_cond }
using     = { USING ~ (PAR_OPEN ~ identifiers ~ PAR_CLOSE | identifiers) }
on        = { ON ~ exprs }
join_cond = { using | on }

group_by = { GROUP_BY ~ (#exprs = exprs | PAR_OPEN ~ #exprs = exprs ~ PAR_CLOSE) }

ordering    = { ASC | DESC }
order_expr  = { expr ~ ordering? }
order_exprs = { order_expr ~ ("," ~ order_expr)* }
order_by    = { ORDER_BY ~ order_exprs }

limit = { LIMIT ~ #limit = number }

sample = { SAMPLE ~ #sample = number }

settings = { SETTINGS ~ exprs }

fields = { exprs }

select = {
    SELECT ~ fields ~ (FROM ~ table_or_subquery)? ~ join* ~ where? ~ group_by? ~ having? ~ order_by? ~ limit? ~ sample? ~ settings? ~ ";"?
}

query   = { SOI ~ select ~ EOI }
queries = { SOI ~ select ~ select* ~ EOI }
